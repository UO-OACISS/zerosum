#!/bin/bash

#
# MIT License
#
# Copyright (c) 2023 University of Oregon, Kevin Huck
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

# Absolute path this script is in, thus /home/user/bin
SCRIPTPATH="$( cd "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
BASEDIR="$(dirname $SCRIPTPATH)"
#BASEDIR=@CMAKE_INSTALL_PREFIX@
LIBDIR=lib
if [ ! -d ${BASEDIR}/${LIBDIR} ] ; then
    LIBDIR=lib64
fi

usage() {
    message="
Usage:
$(basename "$0") <ZS options> executable <executable options>

where ZS options are zero or more of:
    --zs:period <value>     specify frequency of OS/HW sampling
                            (integer seconds, default: 1)
    --zs:async-core <value> specify core/HWT where ZeroSum async thread should be pinned
                            (integer id, default: last ID in process affinity list)
    --zs:details            report detailed output
                            (boolean, default: false)
    --zs:signal-handler     register a signal handler in ZeroSum to handle crashes
                            (boolean, default: false)
    "
    echo "${message}"
    exit 1
}

period=1.0
prog=""
PARAMS=""

if [ $# -eq 0 ] ; then
    usage
fi

PARAMS=""
while (( "$#" )); do
  case "$1" in
    --zs:period)
      if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
        export ZS_PERIOD=$2
        shift 2
      else
        echo "Error: Argument for $1 is missing" >&2
        usage
      fi
      ;;
    --zs:signal-handler)
      export ZS_SIGNAL_HANDLER=1
      shift
      ;;
    --zs:details)
      export ZS_DETAILS=1
      shift
      ;;
    --zs:async-core)
      if [ -n "$2" ] && [ ${2:0:1} != "-" ]; then
        export ZS_ASYNC_CORE=$2
        shift 2
      else
        echo "Error: Argument for $1 is missing" >&2
        usage
      fi
      ;;
    --zs:help)
      usage
      ;;
    --zs:*) # unsupported flags
      echo "Error: Unsupported flag $1" >&2
      usage
      ;;
    *) # preserve positional arguments
      if [ "$prog" = "" ] ; then
        prog=$1
      fi
      PARAMS="$PARAMS $1"
      shift
      ;;
  esac
done
# set positional arguments in their proper place
eval set -- "${PARAMS}"

if [ ${#PARAMS} -eq 0 ] ; then
    usage
fi

# Setup all the library paths, and library preloads to support what was requested
# NOTE: we add the ":" to each library name, becuase stupid APPLE isn't smart enough
# to handle an empty library name and tries to load a library named '' :(
if [ "x${LD_LIBRARY_PATH}" = "x" ] ; then
  LD_LIBRARY_PATH=${BASEDIR}/${LIBDIR}
else
  LD_LIBRARY_PATH=${BASEDIR}/${LIBDIR}:${LD_LIBRARY_PATH}
fi

PRELOAD=${BASEDIR}/${LIBDIR}/@ZS_LIBNAME@.so
export OMP_TOOL=enabled
export OMP_TOOL_LIBRARIES=${PRELOAD}
export OMP_TOOL_VERBOSE_INIT=stdout

export LD_PRELOAD=${PRELOAD}

${PARAMS}