# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
executors:
  basic:
    docker:
      - image: ubuntu-2204:2023.04.2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  vanilla-job:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    executor: basic

    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Create build directories
          command: |
            mkdir -p build
      - run:
          name: "Configure"
          command: |
            cmake -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo -DZeroSum_STANDALONE=TRUE
      - run:
          name: "Build"
          command: |
            cmake --build build -j4
      - run:
          name: "Test"
          command: |
            ctest --test-dir build --rerun-failed --output-on-failure
  cuda-job:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    machine:
      image: linux-cuda-11:default
    resource_class: gpu.nvidia.small.multi

    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Create build directories
          command: |
            mkdir -p build
      - run:
          name: "Configure"
          command: |
            cmake -B build -DCMAKE_BUILD_TYPE=RelWithDebInfo -DZeroSum_STANDALONE=TRUE -DZeroSum_WITH_CUDA=TRUE -DCMAKE_C_COMPILER=`which nvc` -DCMAKE_CXX_COMPILER=`which nvc++`
      - run:
          name: "Build"
          command: |
            cmake --build build -j4
      - run:
          name: "Test"
          command: |
            ctest --test-dir build

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build-and-test:
    jobs:
      - vanilla-job
      - cuda-job
